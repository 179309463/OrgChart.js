{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f28991ccf6672eb9c6a3","webpack:///./src/index.js"],"names":["OrgChart","chartContainer","data","nodeTitle","nodeId","toggleSiblingsResp","depth","chartClass","exportButton","exportFilename","parentNodeSymbol","draggable","direction","pan","zoom","_name","options","_init","opts","chart","document","createElement","setAttribute","addEventListener","event","node","_closest","target","el","className","querySelector","removeClass","nodeName","buildHierarchy","_buildJsonDS","children","ajaxURL","_attachRel","spinner","_getJSON","then","resp","catch","err","console","error","finally","parentNode","removeChild","appendChild","fn","closest","url","promise","Promise","resolve","reject","client","XMLHttpRequest","open","onreadystatechange","handler","responseType","setRequestHeader","send","readyState","status","response","Error","statusText","li","subObj","firstChild","textContent","trim","tagName","length","id","subLi","push","buildJsonDS","flags","relationship","item","attachRel","appendTo","nodeData","level","callback","$nodeWrapper","$childNodes","hasChildren","isVerticalNode","verticalDepth","Object","keys","$appendTo","$","append","when","createNode","done","$nodeDiv","wrap","fail","log","isHidden","isVerticalLayer","lineLayer","i","$nodeLayer","find","each","$nodeCell"],"mappings":"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","file":"orgchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"orgchart\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"orgchart\"] = factory();\n\telse\n\t\troot[\"orgchart\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f28991ccf6672eb9c6a3\n **/","export default class OrgChart {\n  constructor({\n    chartContainer,\n    data,\n    nodeTitle = 'name',\n    nodeId = 'id',\n    toggleSiblingsResp = false,\n    depth = 999,\n    chartClass = '',\n    exportButton = false,\n    exportFilename = 'OrgChart',\n    parentNodeSymbol = 'fa-users',\n    draggable = false,\n    direction = 't2b',\n    pan = false,\n    zoom = false\n  } = {}) {\n    this._name = 'OrgChart';\n    this.options = {\n      'chartContainer': chartContainer,\n      'nodeTitle': nodeTitle,\n      'nodeId': nodeId,\n      'toggleSiblingsResp': toggleSiblingsResp,\n      'depth': depth,\n      'chartClass': chartClass,\n      'exportButton': exportButton,\n      'exportFilename': exportFilename,\n      'parentNodeSymbol': parentNodeSymbol,\n      'draggable': draggable,\n      'direction': direction,\n      'pan': pan,\n      'zoom': zoom\n    };\n\n    this._init();\n  }\n  get name() {\n    return this._name;\n  }\n  _init() {\n    // build the org-chart\n    let opts = this.options,\n      data = opts.data,\n      chart = document.createElement('div');\n\n    chart.setAttribute('data-options', opts);\n    chart.setAttribute('class', 'orgchart' + (opts.chartClass !== '' ? ' ' + opts.chartClass : '') +\n      (opts.direction !== 't2b' ? ' ' + opts.direction : ''));\n    chart.addEventListener('click', function (event) {\n      let node = this._closest(event.target, function (el) {\n        return el.className === 'node';\n      });\n\n      if (!node) {\n        chart.querySelector('.node.focused').removeClass('focused');\n      }\n    }, false);\n    if (typeof data === 'object') {\n      if (data.nodeName) { // ul datasource\n        this.buildHierarchy(chart, this._buildJsonDS(data.children[0], 0, opts));\n      } else { // local json datasource\n        this.buildHierarchy(chart, opts.ajaxURL ? data : this._attachRel(data, '00'), 0, opts);\n      }\n    } else {\n      let spinner = document.createElement('i');\n      spinner.setAttribute('class', 'fa fa-circle-o-notch fa-spin spinner');\n      this._getJSON(data)\n      .then(function(resp) { //cb\n        this.buildHierarchy(chart, opts.ajaxURL ? resp : this._attachRel(resp, '00'), 0, opts);\n      })\n      .catch(function(err) {\n        console.error('failed to fetch datasource for orgchart', err);\n      })\n      .finally(function() {\n        let spinner = chart.querySelector('.spinner')\n        spinner.parentNode.removeChild(spinner);\n      });\n    }\n    opts.chartContainer.appendChild(chart);\n  }\n  _closest(el, fn) {\n    return el && (fn(el) ? el : closest(el.parentNode, fn));\n  }\n  _getJSON(url) {\n    var promise = new Promise(function(resolve, reject){\n      var client = new XMLHttpRequest();\n      client.open('GET', url);\n      client.onreadystatechange = handler;\n      client.responseType = 'json';\n      client.setRequestHeader('Accept', 'application/json');\n      client.send();\n\n      function handler() {\n        if (this.readyState !== 4) {\n          return;\n        }\n        if (this.status === 200) {\n          resolve(this.response);\n        } else {\n          reject(new Error(this.statusText));\n        }\n      };\n    });\n\n    return promise;\n  }\n  _buildJsonDS(li) {\n    var subObj = {\n      'name': li.firstChild.textContent.trim(),\n      'relationship': (li.parentNode.parentNode.tagName === 'li' ? '1': '0') +\n        (li.parentNode.children > 1 ? 1: 0) + (li.children.length ? 1 : 0)\n    };\n\n    if (li.id) {\n      subObj.id = li.id;\n    }\n    for (let subLi of li.querySelector('ul').children) {\n      if (!subObj.children) { subObj.children = []; }\n      subObj.children.push(buildJsonDS(subLi));\n    }\n    return subObj;\n  }\n  _attachRel(data, flags) {\n    data.relationship = flags + (data.children && data.children.length > 0 ? 1 : 0);\n    if (data.children) {\n      for (let item of data.children) {\n        attachRel(item, '1' + (data.children.length > 1 ? 1 : 0));\n      }\n    }\n    return data;\n  }\n  buildHierarchy(appendTo, nodeData, level, opts, callback) {\n    var $nodeWrapper;\n    // Construct the node\n    var $childNodes = nodeData.children;\n    var hasChildren = $childNodes ? $childNodes.length : false;\n    var isVerticalNode = (opts.verticalDepth && (level + 1) >= opts.verticalDepth) ? true : false;\n    if (Object.keys(nodeData).length > 1) { // if nodeData has nested structure\n      $nodeWrapper = isVerticalNode ? $appendTo : $('<table>');\n      if (!isVerticalNode) {\n        $appendTo.append($nodeWrapper);\n      }\n      $.when(createNode(nodeData, level, opts))\n      .done(function($nodeDiv) {\n        if (isVerticalNode) {\n          $nodeWrapper.append($nodeDiv);\n        }else {\n          $nodeWrapper.append($nodeDiv.wrap('<tr><td' + (hasChildren ? ' colspan=\"' + $childNodes.length * 2 + '\"' : '') + '></td></tr>').closest('tr'));\n        }\n        if (callback) {\n          callback();\n        }\n      })\n      .fail(function() {\n        console.log('Failed to creat node')\n      });\n    }\n    // Construct the inferior nodes and connectiong lines\n    if (hasChildren) {\n      if (Object.keys(nodeData).length === 1) { // if nodeData is just an array\n        $nodeWrapper = $appendTo;\n      }\n      var isHidden = level + 1 >= opts.depth ? ' hidden' : '';\n      var isVerticalLayer = (opts.verticalDepth && (level + 2) >= opts.verticalDepth) ? true : false;\n\n      // draw the line close to parent node\n      if (!isVerticalLayer) {\n        $nodeWrapper.append('<tr class=\"lines' + isHidden + '\"><td colspan=\"' + $childNodes.length * 2 + '\"><div class=\"downLine\"></div></td></tr>');\n      }\n      // draw the lines close to children nodes\n      var lineLayer = '<tr class=\"lines' + isHidden + '\"><td class=\"rightLine\">&nbsp;</td>';\n      for (var i=1; i<$childNodes.length; i++) {\n        lineLayer += '<td class=\"leftLine topLine\">&nbsp;</td><td class=\"rightLine topLine\">&nbsp;</td>';\n      }\n      lineLayer += '<td class=\"leftLine\">&nbsp;</td></tr>';\n      var $nodeLayer;\n      if (isVerticalLayer) {\n        $nodeLayer = $('<ul>');\n        if (level + 2 === opts.verticalDepth) {\n          $nodeWrapper.append('<tr class=\"verticalNodes\"><td></td></tr>')\n            .find('.verticalNodes').children().append($nodeLayer);\n        } else {\n          $nodeWrapper.append($nodeLayer);\n        }\n      } else {\n        $nodeLayer = $('<tr class=\"nodes' + isHidden + '\">');\n        $nodeWrapper.append(lineLayer).append($nodeLayer);\n      }\n      // recurse through children nodes\n      $.each($childNodes, function() {\n        var $nodeCell = isVerticalLayer ? $('<li>') : $('<td colspan=\"2\">');\n        $nodeLayer.append($nodeCell);\n        buildHierarchy($nodeCell, this, level + 1, opts, callback);\n      });\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/"],"sourceRoot":""}